{"version":3,"file":"static/js/468.be797dde.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/Container/Container.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","page/Home.jsx","page/NotFound.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  background: #d3d3d3;\n  color: #2c2c2c;\n  cursor: pointer;\n  font-size: 1em;\n  padding: 0.5rem;\n  border: 0;\n  transition: all 0.5s;\n  border-radius: 10px;\n\n  :after {\n    position: absolute;\n    left: 80%;\n    top: 54%;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n\n  :hover {\n    background: black;\n    transition: all 0.5s;\n    border-radius: 10px;\n    box-shadow: 0px 6px 15px #0000ff61;\n    padding: 0.5rem 2rem 0.5rem 0.5rem;\n    color: #ffffff;\n    :after {\n      opacity: 1;\n      transition: all 0.5s;\n      color: #ffffff;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 50px;\n`;\n","import { SpinnerDotted } from 'spinners-react';\nexport const Loader = () => {\n  return (\n    <div>\n      <SpinnerDotted size={90} thickness={97} speed={38} color=\"#36ad47\" />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  width: 70%;\n  padding-top: 30px;\n  color: #ddd;\n  gap: 20px;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  width: 220px;\n  transition: all 200ms ease-out;\n\n  :hover {\n     box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, \n     rgba(0, 0, 0, 0.22) 0px 15px 12px;   \n     transform: scale(1.05);\n  }\n\n  :after {\n      padding-bottom: 100%\n      display: block\n  }\n`;\n\nexport const OnLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, List, OnLink, Image } from './MovieList.styled';\nimport NotImage from '../Images/NotImage.jpg';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <OnLink to={`/movie/${movie.id}`} state={{ from: location }}>\n            <Image\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                  : NotImage\n              }\n              alt={movie.title}\n            />\n          </OnLink>\n        </Item>\n      ))}\n    </List>\n  );\n}\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\n// import { useLocation, NavLink } from 'react-router-dom';\nimport { fetchTrending } from 'services/fetchApi';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport NotFound from './NotFound';\nimport { Container } from 'components/Container/Container.styled';\n\nexport default function Home() {\n  const [trends, setTrends] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  const page = 1;\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchTrending(page)\n      .then(data => {\n        setTrends(data.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus('rejected');\n      });\n  }, [page]);\n  return (\n    <Container>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MovieList movies={trends}></MovieList>}\n      {status === 'rejected' && <NotFound message={error} />}\n    </Container>\n  );\n}\n","import { BackLink } from 'components/BackLink/BackLink.styled';\nimport { Container } from 'components/Container/Container.styled';\nimport { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport imgError from '../components/Images/imgError.jpg';\n\nexport default function NotFound() {\n  const navigate = useLocation();\n  const backLink = useRef(navigate.state?.from ?? '/');\n\n  return (\n    <Container>\n      <BackLink to={backLink.current}>Go back</BackLink>\n      <div\n        style={{\n          paddingTop: '40px',\n        }}\n      >\n        <p> Something went wrong, try reloading the page or come back later</p>\n        <img src={imgError} alt=\"\" width=\"1000px\" />\n      </div>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6eac04b3db1d8bf65626de9a2b0d930';\n\nconst fetchTrending = async page => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport {\n  fetchTrending,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovies,\n};\n"],"names":["BackLink","styled","NavLink","Container","Loader","size","thickness","speed","color","List","Item","OnLink","Link","Image","MovieList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","NotImage","alt","title","Home","useState","trends","setTrends","status","setStatus","error","setError","useEffect","fetchTrending","then","data","results","catch","message","NotFound","navigate","backLink","useRef","current","style","paddingTop","imgError","width","MAIN_URL","API_KEY","page","axios","response","fetchMovies","query","fetchMovieById","fetchCastById","fetchReviewsById"],"sourceRoot":""}