{"version":3,"file":"static/js/691.cb6851fb.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/Container/Container.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchInput/SearchInput.styled.jsx","components/SearchInput/SearchInput.jsx","page/Movies.jsx","page/NotFound.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  background: #d3d3d3;\n  color: #2c2c2c;\n  cursor: pointer;\n  font-size: 1em;\n  padding: 0.5rem;\n  border: 0;\n  transition: all 0.5s;\n  border-radius: 10px;\n\n  :after {\n    position: absolute;\n    left: 80%;\n    top: 54%;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n\n  :hover {\n    background: black;\n    transition: all 0.5s;\n    border-radius: 10px;\n    box-shadow: 0px 6px 15px #0000ff61;\n    padding: 0.5rem 2rem 0.5rem 0.5rem;\n    color: #ffffff;\n    :after {\n      opacity: 1;\n      transition: all 0.5s;\n      color: #ffffff;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 50px;\n`;\n","import { SpinnerDotted } from 'spinners-react';\nexport const Loader = () => {\n  return (\n    <div>\n      <SpinnerDotted size={90} thickness={97} speed={38} color=\"#36ad47\" />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  width: 70%;\n  padding-top: 30px;\n  color: #ddd;\n  gap: 20px;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  width: 220px;\n  transition: all 200ms ease-out;\n\n  :hover {\n     box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, \n     rgba(0, 0, 0, 0.22) 0px 15px 12px;   \n     transform: scale(1.05);\n  }\n\n  :after {\n      padding-bottom: 100%\n      display: block\n  }\n`;\n\nexport const OnLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, List, OnLink, Image } from './MovieList.styled';\nimport NotImage from '../Images/NotImage.jpg';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <OnLink to={`/movie/${movie.id}`} state={{ from: location }}>\n            <Image\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                  : NotImage\n              }\n              alt={movie.title}\n            />\n          </OnLink>\n        </Item>\n      ))}\n    </List>\n  );\n}\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const FormBox = styled.div`\n  justify-content: center;\n  display: flex;\n`;\nexport const Form = styled.form`\n  justify-content: center;\n  display: flex;\n  position: relative;\n  padding: 15px 10px 10px;\n  margin-top: 10px;\n  width: 50%;\n`;\nexport const Input = styled.input`\n  width: 50%;\n  border: 0;\n  border-bottom: 2px solid #9b9b9b;\n  outline: 0;\n  font-size: 1.3rem;\n\n  padding: 1px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n\n  :focus {\n    padding-bottom: 6px;\n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #11998e, #38ef7d);\n    border-image-slice: 1;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/128/2811/2811790.png');\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { Btn, Form, FormBox, Input } from './SearchInput.styled';\n\nexport default function SearchInput({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      return alert(' Please input something for search!');\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <FormBox>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={query}\n          onChange={e => {\n            setQuery(e.currentTarget.value);\n          }}\n        />\n\n        <Btn type=\"submit\"> </Btn>\n      </Form>\n    </FormBox>\n  );\n}\nSearchInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { fetchMovies } from 'services/fetchApi';\nimport SearchInput from 'components/SearchInput/SearchInput';\nimport NotFound from './NotFound';\nimport { Container } from 'components/Container/Container.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n\n  const [status, setStatus] = useState('idle');\n\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const movieName = searchParams.get('query') ?? '';\n  const currentPage = Number(searchParams.get('page'))\n    ? Number(searchParams.get('page'))\n    : 1;\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    setStatus('pending');\n    fetchMovies(movieName, currentPage)\n      .then(data => {\n        if (!data.results.length) {\n          return alert('not results');\n        } else {\n          setMovies([...data.results]);\n          setStatus('resolved');\n        }\n      })\n      .catch(setStatus('reject'));\n  }, [currentPage, movieName]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setStatus('idle');\n  };\n  return (\n    <Container>\n      <SearchInput onSubmit={handleFormSubmit} />\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MovieList movies={movies} />}\n      {status === 'rejected' && <NotFound />}\n    </Container>\n  );\n}\n","import { BackLink } from 'components/BackLink/BackLink.styled';\nimport { Container } from 'components/Container/Container.styled';\nimport { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport imgError from '../components/Images/imgError.jpg';\n\nexport default function NotFound() {\n  const navigate = useLocation();\n  const backLink = useRef(navigate.state?.from ?? '/');\n\n  return (\n    <Container>\n      <BackLink to={backLink.current}>Go back</BackLink>\n      <div\n        style={{\n          paddingTop: '40px',\n        }}\n      >\n        <p> Something went wrong, try reloading the page or come back later</p>\n        <img src={imgError} alt=\"\" width=\"1000px\" />\n      </div>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6eac04b3db1d8bf65626de9a2b0d930';\n\nconst fetchTrending = async page => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport {\n  fetchTrending,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovies,\n};\n"],"names":["BackLink","styled","NavLink","Container","Loader","size","thickness","speed","color","List","Item","OnLink","Link","Image","MovieList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","NotImage","alt","title","FormBox","Form","Input","Btn","SearchInput","onSubmit","useState","query","setQuery","event","preventDefault","trim","alert","type","value","onChange","e","currentTarget","Movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","movieName","get","currentPage","Number","useEffect","fetchMovies","then","data","results","length","catch","NotFound","navigate","backLink","useRef","current","style","paddingTop","imgError","width","MAIN_URL","API_KEY","fetchTrending","page","axios","response","fetchMovieById","fetchCastById","fetchReviewsById"],"sourceRoot":""}