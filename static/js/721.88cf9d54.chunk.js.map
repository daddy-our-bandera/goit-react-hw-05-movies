{"version":3,"file":"static/js/721.88cf9d54.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/Container/Container.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","page/MovieDetails.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  background: #d3d3d3;\n  color: #2c2c2c;\n  cursor: pointer;\n  font-size: 1em;\n  padding: 0.5rem;\n  border: 0;\n  transition: all 0.5s;\n  border-radius: 10px;\n\n  :after {\n    position: absolute;\n    left: 80%;\n    top: 54%;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n\n  :hover {\n    background: black;\n    transition: all 0.5s;\n    border-radius: 10px;\n    box-shadow: 0px 6px 15px #0000ff61;\n    padding: 0.5rem 2rem 0.5rem 0.5rem;\n    color: #ffffff;\n    :after {\n      opacity: 1;\n      transition: all 0.5s;\n      color: #ffffff;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px 50px;\n`;\n","import PropTypes from 'prop-types';\n\nexport default function ErrorMessage({ message }) {\n  return <h1>{message}</h1>;\n}\nErrorMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { SpinnerDotted } from 'spinners-react';\nexport const Loader = () => {\n  return (\n    <div>\n      <SpinnerDotted size={90} thickness={97} speed={38} color=\"#36ad47\" />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieSection = styled.section`\n  margin-top: 30px;\n`;\n\nexport const LinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 40px;\n  gap: 50px;\n`;\n\nexport const StyledLink = styled(Link)`\n  background: #d3d3d3;\n  color: #2c2c2c;\n  cursor: pointer;\n  font-size: 1em;\n  padding: 0.5rem;\n  border: 0;\n  transition: all 0.5s;\n  border-radius: 10px;\n\n  :after {\n    position: absolute;\n    left: 80%;\n    top: 54%;\n    right: 0;\n    bottom: 0;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n  }\n\n  :hover {\n    background: black;\n    transition: all 0.5s;\n    border-radius: 10px;\n    box-shadow: 0px 6px 15px #0000ff61;\n    padding: 0rem 0.5rem 1rem 0.5rem;\n    color: #ffffff;\n    :after {\n      opacity: 1;\n      transition: all 0.5s;\n      color: #ffffff;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport NotImage from '../Images/NotImage.jpg';\nimport { LinkContainer, MovieSection, StyledLink } from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n  const {\n    title,\n    name,\n    release_date,\n    vote_average,\n    poster_path,\n    overview,\n    genres,\n  } = movie;\n  return (\n    <MovieSection>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w200/${poster_path} `\n              : NotImage\n          }\n          alt={title}\n        />\n        <ul>\n          <li>{title}</li>\n          <li>{name}</li>\n          <li>{release_date}</li>\n          <li>{vote_average}</li>\n          <li>{overview}</li>\n        </ul>\n        <ul>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name} </li>\n          ))}\n        </ul>\n      </div>\n      <LinkContainer>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Revievs</StyledLink>\n      </LinkContainer>\n    </MovieSection>\n  );\n};\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { useEffect, Suspense, useState, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchMovieById } from 'services/fetchApi';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { BackLink } from 'components/BackLink/BackLink.styled';\nimport { Container } from 'components/Container/Container.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const { movieId } = useParams();\n\n  const navigate = useLocation();\n  const backLink = useRef(navigate.state?.from ?? '/');\n\n  useEffect(() => {\n    setStatus('pending');\n\n    fetchMovieById(movieId)\n      .then(data => {\n        setMovie(data);\n        document.title = `My Movies | ${data.title}`;\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      <BackLink to={backLink.current}>Go back</BackLink>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MovieInfo movie={movie} />}\n      {status === 'rejected' && <ErrorMessage />}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e6eac04b3db1d8bf65626de9a2b0d930';\n\nconst fetchTrending = async page => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\nconst fetchMovies = async (query, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\nconst fetchMovieById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport {\n  fetchTrending,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovies,\n};\n"],"names":["BackLink","styled","NavLink","Container","ErrorMessage","message","Loader","size","thickness","speed","color","MovieSection","LinkContainer","StyledLink","Link","MovieInfo","movie","title","name","release_date","vote_average","poster_path","overview","genres","src","NotImage","alt","map","id","to","MovieDetails","useState","setMovie","status","setStatus","movieId","useParams","navigate","useLocation","backLink","useRef","state","from","useEffect","fetchMovieById","then","data","document","catch","error","current","Suspense","fallback","MAIN_URL","API_KEY","fetchTrending","page","axios","response","fetchMovies","query","fetchCastById","fetchReviewsById"],"sourceRoot":""}